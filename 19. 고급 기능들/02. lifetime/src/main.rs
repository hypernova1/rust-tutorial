/*
    고급 라이프타임
        - 라이프타임 서브타이핑: 한 라이프타임이 다른 라이프타임보다 오래 사는 것을 보장
        - 라이프타임 바운드: 제네릭 타입을 가리키는 참조자를 위한 라이프타임 명시
        - 트레잇 객체 라이프타임의 추론: 컴파일러는 어떻게 트레잇 객체의 라이프타임을 추론하며 언제 이들을 명시할 필요가 있는지에 대하여
*/


/*
    트레잇 객체 라이프타임의 추론

    라이프타임과 트레잇 객체가 함께 동작하는 규칙
        - 트레잇 객체의 기본 라이프 타임은 'static
        - &'a Trait 혹은 &'a mut Trait을 쓴 경우, 트레잇 객체의 기본 라이프타임은 'a
        - 단일 T: 'a 구절을 쓴 경우, 트레잇 객체의 기본 라이프타임은 'a
        - 여러개의 T: 'a 같은 구절들을 쓴 경우, 기본 라이프타임은 없고 명시적으로 써야함
*/
trait Red {}

struct Ball<'a> {
    diameter: &'a i32,
}

impl<'a> Red for Ball<'a> {}

fn main() {
    let num = 5;

    let obj = Box::new(Ball { diameter: &num }) as Box<dyn Red>;
}